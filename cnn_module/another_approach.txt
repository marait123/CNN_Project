
	signal convR :  signed(WORDSIZE-1 downto 0);
	signal poolR: signed(WORDSIZE-1 downto 0);
	signal fil : signed(WORDSIZE*5*5-1 downto 0);
	signal img_W : signed(WORDSIZE*5*5-1 downto 0);
    
    function conv (f : signed; w : signed)return signed is
        variable convresult : signed(16 downto 0):= (others => '0');
        variable tmp : signed(31 downto 0):= (others => '0');
        begin
            
        for i in 0 to WINDOWSIZE*WINDOWSIZE-1 loop
            tmp := (f((i+1)*16-1 downto i*16)) * (w((i+1)*16-1 downto i*16));
            if(to_integer(tmp(31 downto 22)) > 15) then 
                tmp := (others=>'1');
                tmp(31 downto 26) := (others=>'0');
            end if;
            if(to_integer(tmp(31 downto 22)) < -16) then
                tmp := (others=>'1');
                tmp(21 downto 0) := (others=>'0');
            end if;
            convresult := convresult + (tmp(26)&(tmp(26 downto 11)));
            if(to_integer(convresult(16 downto 11)) > 15) then 
                convresult := (others=>'1');
                convresult(16 downto 15) := "00";
            end if;
            if(to_integer(convresult(16 downto 11)) < -16) then
                convresult := (others=>'1');
                convresult(10 downto 0) := (others=>'0');
            end if;
        end loop;
        
        return convresult(15 downto 0);
        
        end function;
        
    
	begin
	-- RAM component --
	Ram_comp: ram generic map(WORDSIZE, ADDRESS_SIZE) port map(clk,we,ad,indata,outdata);
	-- controller --
	Control: controller generic map(WORDSIZE , ADDRESS_SIZE) port map(start,clk,indata,convR,poolR,we,ad,outdata,fil,img_W);		
	-- convolution --
	Convolute: convolution generic map(5) port map(fil,img_W,convR);
	-- pooling --
	Pooling: poolingFloat generic map(5) port map(img_W,poolR);


	-- Large Pooling
GEN_D_FF:
    for ROW in 0 to 27 generate
    begin
        GEN_D_FF0:
                for COL in 0 to 27 generate
                begin

                    conv_result(ROW * 28 + COL) <= conv(signed(fil) , signed(
                        buff(to_integer(unsigned((ROW) * 32 + (COL))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW) * 32 + (COL+1))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW) * 32 + (COL+2))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW) * 32 + (COL+3))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW) * 32 + (COL+4))))(15 downto 0) &
                        buff(to_integer(unsigned((ROW+1) * 32 + (COL))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+1) * 32 + (COL+1))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+1) * 32 + (COL+2))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+1) * 32 + (COL+3))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+1) * 32 + (COL+4))))(15 downto 0) &
                        buff(to_integer(unsigned((ROW+2) * 32 + (COL))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+2) * 32 + (COL+1))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+2) * 32 + (COL+2))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+2) * 32 + (COL+3))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+2) * 32 + (COL+4))))(15 downto 0) &
                        buff(to_integer(unsigned((ROW+3) * 32 + (COL))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+3) * 32 + (COL+1))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+3) * 32 + (COL+2))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+3) * 32 + (COL+3))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+3) * 32 + (COL+4))))(15 downto 0) &
                        buff(to_integer(unsigned((ROW+4) * 32 + (COL))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+4) * 32 + (COL+1))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+4) * 32 + (COL+2))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+4) * 32 + (COL+3))))(15 downto 0) &  
                        buff(to_integer(unsigned((ROW+4) * 32 + (COL+4))))(15 downto 0)     
                    ) 
                                    
                    );
                    -- DFF_X: convolution generic map(5) port map(fil,img_W,convR);

                  
            end generate;
    end generate;